'use client';
import { useState } from 'react';
import { UserProfileAPI } from 'src/lib';
import './CreateProfilePage.css';

function decodeJwtPayload(token: string) {
  try {
    const payload = token.split('.')[1];
    return JSON.parse(atob(payload));
  } catch {
    return null;
  }
}

export default function CreateProfilePage() {
  const [form, setForm] = useState({ description: '', phone: '', address: '' });
  const [file, setFile] = useState<File | null>(null);
  const [loading, setLoading] = useState(false);
  const [success, setSuccess] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setForm((prev) => ({ ...prev, [name]: value }));
  };

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files?.[0]) setFile(e.target.files[0]);
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError(null);
    setSuccess(false);

    if (!file) {
      setError('Debés seleccionar una foto antes de crear el perfil.');
      return;
    }

    setLoading(true);
    try {
      const token = localStorage.getItem('token');
      if (!token) throw new Error('No hay token disponible');

      const payload = decodeJwtPayload(token);
      if (!payload?.id) throw new Error('Token inválido o no contiene userId');

      // Crear perfil
      const body = { userId: payload.id, ...form };
      const res = await UserProfileAPI.create(body);
      const profileId = res.data.data.userProfile.id;
      
      // Subir foto
      await UserProfileAPI.uploadPhoto(profileId, file);

      setSuccess(true);
      setForm({ description: '', phone: '', address: '' });
      setFile(null);
    } catch (err: any) {
      setError(err.response?.data?.message || err.message || 'Error desconocido');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="container">
      <h1 className="title">Crear Perfil de Usuario</h1>
      <form onSubmit={handleSubmit} className="form">

        
        <label className="label">Foto de perfil</label>
        <input type="file" accept="image/*" onChange={handleFileChange} className="input" />

        <label className="label">Descripción</label>
        <textarea
          name="description"
          value={form.description}
          onChange={handleChange}
          maxLength={500}
          required
          className="input"
          placeholder="Descripción del usuario"
        />

        <label className="label">Teléfono</label>
        <input
          name="phone"
          type="tel"
          value={form.phone}
          onChange={handleChange}
          required
          className="input"
          placeholder="+5491123456789"
        />

        <label className="label">Dirección</label>
        <input
          name="address"
          type="text"
          value={form.address}
          onChange={handleChange}
          required
          className="input"
          placeholder="Calle 123"
        />

        <button type="submit" className="button" disabled={loading}>
          {loading ? 'Creando...' : 'Crear Perfil'}
        </button>

        {success && <p className="success">Perfil creado y foto subida correctamente!</p>}
        {error && <p className="error">Error: {error}</p>}
      </form>
    </div>
  );
}
